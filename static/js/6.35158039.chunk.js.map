{"version":3,"sources":["assets/styles/Dashboard/index.ts","assets/images/logo.svg","components/layout/AppBar/TopAppBar/TopAppBarContext.tsx","components/layout/AppBar/TopAppBar/useAppBar.tsx","assets/styles/ui/AppBar/topAppBar.ts","components/layout/AppBar/TopAppBar/index.tsx","components/layout/AppBar/BottomAppBar/index.tsx","components/layout/AppBar/index.tsx","components/layout/Footer/Copyright.tsx","assets/styles/Auth/authStyles.ts","../node_modules/@material-ui/icons/Visibility.js","../node_modules/@material-ui/icons/VisibilityOff.js","../node_modules/@material-ui/icons/LockOutlined.js","../node_modules/@material-ui/core/esm/InputAdornment/InputAdornment.js","views/Auth/components/loginForm.tsx","views/Auth/SignIn.tsx"],"names":["DRAWER_WIDTH","useStyles","makeStyles","theme","createStyles","root","display","appBarSpacer","mixins","toolbar","container","paddingTop","spacing","paddingBottom","content","flexGrow","height","overflow","module","exports","initialContext","setHeading","heading","TopAppBarContext","createContext","TopAppBarCtxProvider","children","useState","Provider","value","useAppBar","useContext","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","language","margin","breakpoints","up","logo","maxWidth","paddingRight","loginButton","float","menuButton","marginRight","menuButtonHidden","rightToolbar","title","textAlign","TopAppBar","isAuthenticated","open","isDrawerToggled","openDrawer","useTranslation","t","i18n","profileMenu","setProfileMenu","languageMenu","setLanguageMenu","history","useHistory","location","useLocation","handleProfileMenuClose","handleLanguageMenuClose","classes","AppBar","position","className","clsx","Toolbar","Link","component","RouterLink","to","src","Logo","alt","IconButton","edge","color","aria-label","onClick","Typography","variant","noWrap","Tooltip","enterDelay","Button","aria-owns","undefined","event","currentTarget","data-ga-event-category","data-ga-event-action","LANGUAGES","filter","code","text","fontSize","Menu","id","anchorEl","Boolean","onClose","map","MenuItem","key","selected","lang","changeLanguage","handleLanguageChange","Box","my","Divider","data-no-link","href","rel","target","hrefLang","pathname","aria-controls","aria-haspopup","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","logout","defaultProps","BottomAppBar","type","Copyright","align","Date","getFullYear","process","avatar","backgroundColor","palette","secondary","main","buttonProgress","green","top","left","marginTop","form","paper","flexDirection","alignItems","waveContainer","waveContent","bottom","submit","wrapper","_interopRequireDefault","require","Object","defineProperty","default","_react","_default","createElement","d","InputAdornment","React","props","ref","_props$component","Component","_props$disablePointer","disablePointerEvents","_props$disableTypogra","disableTypography","variantProp","other","_objectWithoutProperties","muiFormControl","useFormControl","FormControlContext","_extends","hiddenLabel","filled","positionStart","positionEnd","marginDense","withStyles","maxHeight","whiteSpace","pointerEvents","name","LoginForm","withFormik","mapPropsToValues","username","password","remember","validationSchema","object","shape","string","required","handleSubmit","values","handleUserAuthentication","passwordVisibility","setPasswordVisibility","touched","errors","handleBlur","handleChange","loading","onSubmit","TextField","label","onChange","onBlur","helperText","error","fullWidth","autoComplete","InputProps","endAdornment","onMouseDown","preventDefault","FormControlLabel","control","Checkbox","disabled","CircularProgress","size","Grid","item","xs","TranslatedLoginForm","withTranslation","BackgroundPattern","xmlns","viewBox","fill","fillOpacity","SignIn","setLoading","setAlert","useSnackbar","authenticateUser","loginData","a","user","pick","login","response","push","state","message","Container","Avatar","mt"],"mappings":"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","file":"static/js/6.35158039.chunk.js","sourcesContent":["/**\n * Dashboard styles\n */\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\n\nexport const DRAWER_WIDTH = 240;\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            display: \"flex\"\n        },\n        appBarSpacer: theme.mixins.toolbar,\n        container: {\n            paddingTop: theme.spacing(4),\n            paddingBottom: theme.spacing(4)\n        },\n        content: {\n            flexGrow: 1,\n            height: \"100vh\",\n            overflow: \"auto\"\n        }\n    })\n);\n\nexport default useStyles;\n","module.exports = __webpack_public_path__ + \"static/media/logo.176e421a.svg\";","import React, {\n    FC,\n    createContext,\n    Dispatch,\n    ReactNode,\n    useState,\n    SetStateAction\n} from \"react\";\n\ninterface ITopAppBarContextProps {\n    heading: string;\n    setHeading: (heading: string) => void | Dispatch<SetStateAction<string>>;\n}\n\nconst DEFAULT_HEADING = \"Dashboard\";\n\nconst initialContext: ITopAppBarContextProps = {\n    setHeading: () => {},\n    heading: DEFAULT_HEADING\n};\n\nexport const TopAppBarContext = createContext<ITopAppBarContextProps>(initialContext);\n\ninterface ITopAppBarCtxProviderProps {\n    children: ReactNode;\n}\n\nconst TopAppBarCtxProvider: FC<ITopAppBarCtxProviderProps> = ({ children }) => {\n    // TopAppbar Header\n    const [heading, setHeading] = useState(DEFAULT_HEADING);\n\n    return (\n        <TopAppBarContext.Provider value={{ setHeading, heading }}>\n            {children}\n        </TopAppBarContext.Provider>\n    );\n};\n\nexport default TopAppBarCtxProvider;\n","/**\n * ------------ useAppBar custom react hook -----------------\n *\n * Description:   A Custom hook used to update the content on\n *                AppBar/TopAppbar component.\n *\n * Methods to use\n * -------------------------------------------\n * ```\n *    import useAppBar from \"src/components/layout/AppBar/TopAppBar\"\n *\n *    ...(Inside functional component)\n *    const { setHeading, heading } = useAppBar();\n *\n *    setHeading(\"Dashboard\");\n * ```\n * You can modify configurations inside \"./TopAppbarContext\"\n */\nimport { useContext } from \"react\";\n\nimport { TopAppBarContext } from \"./TopAppBarContext\";\n\nexport const useAppBar = () => useContext(TopAppBarContext);\n","/**\n * Top App Bar styles\n */\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport { DRAWER_WIDTH } from \"assets/styles/Dashboard\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        appBar: {\n            zIndex: theme.zIndex.drawer + 1,\n            transition: theme.transitions.create([\"width\", \"margin\"], {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen\n            })\n        },\n        appBarShift: {\n            marginLeft: DRAWER_WIDTH,\n            width: `calc(100% - ${DRAWER_WIDTH}px)`,\n            transition: theme.transitions.create([\"width\", \"margin\"], {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.enteringScreen\n            })\n        },\n        language: {\n            margin: theme.spacing(0, 0.5, 0, 1),\n            display: \"none\",\n            [theme.breakpoints.up(\"md\")]: {\n                display: \"block\"\n            }\n        },\n        logo: {\n            maxWidth: \"50px\",\n            paddingRight: 15\n        },\n        loginButton: {\n            float: \"right\"\n        },\n        menuButton: {\n            marginRight: 36\n        },\n        menuButtonHidden: {\n            display: \"none\"\n        },\n        // This group of buttons will be aligned to the right\n        rightToolbar: {\n            marginLeft: \"auto\",\n            marginRight: -12\n        },\n        title: {\n            flexGrow: 1,\n            textAlign: \"left\"\n        },\n        toolbar: {\n            paddingRight: 24 // Keep right padding when drawer closed\n        }\n    })\n);\n\nexport default useStyles;\n","/**\n * The TopAppBar provides content and actions related to the current screen.\n * It’s used for branding, screen titles, navigation, and actions.\n * Read more: https://material.io/components/app-bars-top\n */\nimport React, { FC, useState, MouseEvent } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useHistory, Link as RouterLink, useLocation } from \"react-router-dom\";\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Menu from \"@material-ui/core/Menu\";\nimport Link from \"@material-ui/core/Link\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport LanguageIcon from \"@material-ui/icons/Translate\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\n\nimport Logo from \"assets/images/logo.svg\";\n\nimport { useAppBar } from \"./useAppBar\";\n\nimport { LANGUAGES } from \"i18n\";\n\nimport clsx from \"clsx\";\nimport useStyles from \"assets/styles/ui/AppBar/topAppBar\";\n\nimport { logout } from \"session/auth\";\n\ninterface ITopAppBarProps {\n    // Drawer open/close triggering function\n    openDrawer?: () => void;\n    // Flag to indicate drawer opened/closed\n    isDrawerToggled?: boolean;\n    // Flag to indicate authenticated state. Renders a plain AppBar if not authenticated.\n    isAuthenticated?: boolean;\n}\n\nconst TopAppBar: FC<ITopAppBarProps> = ({\n    isAuthenticated,\n    isDrawerToggled: open,\n    openDrawer\n}) => {\n    const { t, i18n } = useTranslation();\n\n    const [profileMenu, setProfileMenu] = useState<null | HTMLElement>(null);\n    const [languageMenu, setLanguageMenu] = useState<null | HTMLElement>(null);\n\n    const history = useHistory();\n\n    const { heading } = useAppBar();\n\n    let location = useLocation();\n\n    const handleProfileMenu = (event: MouseEvent<HTMLElement>) => {\n        setProfileMenu(event.currentTarget);\n    };\n\n    const handleProfileMenuClose = () => {\n        setProfileMenu(null);\n    };\n\n    const handleLanguageMenuClick = (event: MouseEvent<HTMLElement>) => {\n        setLanguageMenu(event.currentTarget);\n    };\n\n    const handleLanguageChange = (language: string) => {\n        handleLanguageMenuClose();\n        i18n.changeLanguage(language);\n    };\n\n    const handleLanguageMenuClose = () => {\n        setLanguageMenu(null);\n    };\n\n    const handleUserLogout = () => {\n        logout(history, \"/\");\n    };\n\n    const classes = useStyles();\n    return (\n        <AppBar\n            position=\"absolute\"\n            className={\n                isAuthenticated\n                    ? clsx(classes.appBar, open && classes.appBarShift)\n                    : classes.appBar\n            }>\n            <Toolbar className={classes.toolbar}>\n                {!open && (\n                    <Link component={RouterLink} to=\"/\">\n                        <img src={Logo} alt=\"logo\" className={classes.logo} />\n                    </Link>\n                )}\n                {isAuthenticated && (\n                    <>\n                        <IconButton\n                            edge=\"start\"\n                            color=\"inherit\"\n                            aria-label=\"open drawer\"\n                            onClick={openDrawer}\n                            className={clsx(\n                                classes.menuButton,\n                                open && classes.menuButtonHidden\n                            )}>\n                            <MenuIcon />\n                        </IconButton>\n                        <Typography\n                            component=\"h1\"\n                            variant=\"h6\"\n                            color=\"inherit\"\n                            noWrap\n                            className={classes.title}>\n                            {/* TODO - Language Translation for this */}\n                            {t(`drawer.${heading}`)}\n                        </Typography>\n                    </>\n                )}\n                <section className={classes.rightToolbar}>\n                    <Tooltip\n                        title={t(\"general.changeLanguage\") || \"Change Language\"}\n                        enterDelay={300}>\n                        <Button\n                            color=\"inherit\"\n                            aria-owns={languageMenu ? \"language-menu\" : undefined}\n                            aria-label={t(\"general.changeLanguage\")}\n                            onClick={handleLanguageMenuClick}\n                            data-ga-event-category=\"header\"\n                            data-ga-event-action=\"language\">\n                            <LanguageIcon />\n                            <span className={classes.language}>\n                                {\n                                    LANGUAGES.filter(\n                                        language => language.code === i18n.language\n                                    )[0].text\n                                }\n                            </span>\n                            <ExpandMoreIcon fontSize=\"small\" />\n                        </Button>\n                    </Tooltip>\n                    <Menu\n                        id=\"language-menu\"\n                        anchorEl={languageMenu}\n                        open={Boolean(languageMenu)}\n                        onClose={handleLanguageMenuClose}>\n                        {LANGUAGES.map(language => (\n                            <MenuItem\n                                key={language.code}\n                                selected={i18n.language === language.code}\n                                lang={language.code}\n                                onClick={() => {\n                                    handleLanguageChange(language.code);\n                                }}>\n                                {language.text}\n                            </MenuItem>\n                        ))}\n                        <Box my={1}>\n                            <Divider />\n                        </Box>\n                        <MenuItem\n                            component=\"a\"\n                            data-no-link=\"true\"\n                            href=\"https://github.com/xXZang3tsuXx/react-material-dashboard\"\n                            rel=\"noopener nofollow\"\n                            target=\"_blank\"\n                            key={i18n.language}\n                            lang={i18n.language}\n                            hrefLang=\"en\"\n                            onClick={handleLanguageMenuClose}>\n                            {t(\"helpToTranslate\")}\n                        </MenuItem>\n                    </Menu>\n                    {!isAuthenticated && location.pathname !== \"/login\" && (\n                        <Button\n                            component={RouterLink}\n                            className={classes.loginButton}\n                            color=\"inherit\"\n                            to=\"/login\">\n                            {t(\"general.login\", \"Login\")}\n                        </Button>\n                    )}\n                </section>\n                {isAuthenticated && (\n                    <section className={classes.rightToolbar}>\n                        <IconButton\n                            aria-label=\"account of current user\"\n                            aria-controls=\"menu-appbar\"\n                            aria-haspopup=\"true\"\n                            color=\"inherit\"\n                            onClick={handleProfileMenu}>\n                            <AccountCircle />\n                        </IconButton>\n                        <Menu\n                            id=\"menu-appbar\"\n                            anchorEl={profileMenu}\n                            anchorOrigin={{\n                                vertical: \"top\",\n                                horizontal: \"right\"\n                            }}\n                            keepMounted\n                            transformOrigin={{\n                                vertical: \"top\",\n                                horizontal: \"right\"\n                            }}\n                            open={Boolean(profileMenu)}\n                            onClose={handleProfileMenuClose}>\n                            <MenuItem onClick={handleProfileMenuClose}>Help</MenuItem>\n                            <MenuItem onClick={handleUserLogout}>Logout</MenuItem>\n                        </Menu>\n                    </section>\n                )}\n            </Toolbar>\n        </AppBar>\n    );\n};\n\nTopAppBar.defaultProps = {\n    isAuthenticated: false,\n    isDrawerToggled: true\n};\n\nexport { useAppBar };\n\nexport default TopAppBar;\n","/**\n * A bottom app bar displaying navigation and key actions at the bottom of mobile screens.\n */\nimport React, { FC } from \"react\";\n\nconst BottomAppBar: FC = () => {\n    return <div>Bottom Tab Bar component will be updated here</div>;\n};\n\nexport default BottomAppBar;\n","/**\n * AppBar can be either positioned top or bottomed\n * TODO: Bottom AppBar should be displayed for mobile screens\n */\nimport React, { FC } from \"react\";\n\nimport TopAppBar from \"./TopAppBar\";\nimport BottomAppBar from \"./BottomAppBar\";\n\ninterface IAppBarProps {\n    /**\n     * Drawer open/close triggering function\n     */\n    openDrawer?: () => void;\n    /**\n     * Flag to indicate drawer opened/closed\n     */\n    isDrawerToggled?: boolean;\n    /**\n     * Flag to indicate authenticated state. Renders a plain AppBar if not authenticated.\n     */\n    isAuthenticated?: boolean;\n    /**\n     * Flag to indicate Bottom or Top App Bar\n     */\n    type: \"Bottom\" | \"Top\";\n}\n\nconst AppBar: FC<IAppBarProps> = ({\n    isAuthenticated,\n    isDrawerToggled,\n    openDrawer,\n    type\n}) => {\n    if (type === \"Top\") {\n        return (\n            <TopAppBar\n                isAuthenticated={isAuthenticated}\n                isDrawerToggled={isDrawerToggled}\n                openDrawer={openDrawer}\n            />\n        );\n    } else {\n        return <BottomAppBar />;\n    }\n};\n\nexport default AppBar;\n","import React, { FC } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nimport Link from \"@material-ui/core/Link\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst Copyright: FC = () => {\n    const { t } = useTranslation();\n\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {`${t(\"copyright\")} `}\n            {new Date().getFullYear()}\n            <Link color=\"inherit\" href={`${process.env.REACT_APP_TRADEMARK_LINK}`}>\n                {` ${t(\"organizationName\")}`}\n            </Link>\n            {\".\"}\n        </Typography>\n    );\n};\n\nexport default Copyright;\n","/**\n * Auth screens related styles\n */\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport { green } from \"@material-ui/core/colors\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        avatar: {\n            margin: theme.spacing(1),\n            backgroundColor: theme.palette.secondary.main\n        },\n        buttonProgress: {\n            color: green[800],\n            position: \"absolute\",\n            top: \"50%\",\n            left: \"50%\",\n            marginTop: -8,\n            marginLeft: -12\n        },\n        form: {\n            width: \"100%\",\n            marginTop: theme.spacing(1)\n        },\n        paper: {\n            marginTop: theme.spacing(8),\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\"\n        },\n        root: {\n            display: \"flex\"\n        },\n        waveContainer: {\n            height: \"fit-content\"\n        },\n        waveContent: {\n            position: \"absolute\",\n            zIndex: -999,\n            bottom: 0,\n            left: 0,\n            width: \"100%\"\n        },\n        submit: {\n            margin: theme.spacing(3, 0, 2)\n        },\n        wrapper: {\n            margin: theme.spacing(1),\n            position: \"relative\"\n        }\n    })\n);\n\nexport default useStyles;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78l3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zM9 6c0-1.66 1.34-3 3-3s3 1.34 3 3v2H9V6zm9 14H6V10h12v10zm-6-3c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2z\"\n}), 'LockOutlined');\n\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Typography from '../Typography';\nimport withStyles from '../styles/withStyles';\nimport FormControlContext, { useFormControl } from '../FormControl/FormControlContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    height: '0.01em',\n    // Fix IE 11 flexbox alignment. To remove at some point.\n    maxHeight: '2em',\n    alignItems: 'center',\n    whiteSpace: 'nowrap'\n  },\n\n  /* Styles applied to the root element if `variant=\"filled\"`. */\n  filled: {\n    '&$positionStart:not($hiddenLabel)': {\n      marginTop: 16\n    }\n  },\n\n  /* Styles applied to the root element if `position=\"start\"`. */\n  positionStart: {\n    marginRight: 8\n  },\n\n  /* Styles applied to the root element if `position=\"end\"`. */\n  positionEnd: {\n    marginLeft: 8\n  },\n\n  /* Styles applied to the root element if `disablePointerEvents=true`. */\n  disablePointerEvents: {\n    pointerEvents: 'none'\n  },\n\n  /* Styles applied if the adornment is used inside <FormControl hiddenLabel />. */\n  hiddenLabel: {},\n\n  /* Styles applied if the adornment is used inside <FormControl margin=\"dense\" />. */\n  marginDense: {}\n};\nvar InputAdornment = React.forwardRef(function InputAdornment(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disablePointer = props.disablePointerEvents,\n      disablePointerEvents = _props$disablePointer === void 0 ? false : _props$disablePointer,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      position = props.position,\n      variantProp = props.variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"]);\n\n  var muiFormControl = useFormControl() || {};\n  var variant = variantProp;\n\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('Material-UI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n\n  return /*#__PURE__*/React.createElement(FormControlContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, disablePointerEvents && classes.disablePointerEvents, muiFormControl.hiddenLabel && classes.hiddenLabel, variant === 'filled' && classes.filled, {\n      'start': classes.positionStart,\n      'end': classes.positionEnd\n    }[position], muiFormControl.margin === 'dense' && classes.marginDense),\n    ref: ref\n  }, other), typeof children === 'string' && !disableTypography ? /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\"\n  }, children) : children));\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes = {\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the input on click.\n   */\n  disablePointerEvents: PropTypes.bool,\n\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  muiFormControl: PropTypes.object,\n\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['start', 'end']),\n\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['standard', 'outlined', 'filled'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiInputAdornment'\n})(InputAdornment);","/**\n * LoginForm HOC wrapped in Formik\n * form-level validations of LoginForm is done here.\n */\n\nimport React, { FC, MouseEvent, useState } from \"react\";\nimport { WithTranslation, withTranslation } from \"react-i18next\";\nimport { withFormik, FormikProps } from \"formik\";\nimport { object, string } from \"yup\";\n\nimport Button from \"@material-ui/core/Button\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Link from \"@material-ui/core/Link\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\n\nimport useStyles from \"assets/styles/Auth/authStyles\";\n\nimport { ILoginParams } from \"session/auth\";\n\nimport { Link as RouterLink } from \"react-router-dom\";\n\ninterface IFormProps extends WithTranslation {\n    username?: string;\n    password?: string;\n    remember?: boolean;\n    handleUserAuthentication: (loginData: ILoginParams) => void;\n    /* Flag to indicate loading state of the form */\n    loading: boolean;\n}\ninterface IFormValues extends ILoginParams {\n    username: string;\n    password: string;\n    remember: boolean;\n}\n\nconst RenderForm: FC<IFormProps & FormikProps<IFormValues>> = props => {\n    const classes = useStyles();\n\n    const [passwordVisibility, setPasswordVisibility] = useState(false);\n\n    const handleClickShowPassword = () => {\n        setPasswordVisibility(!passwordVisibility);\n    };\n\n    const handleMouseDownPassword = (event: MouseEvent<HTMLButtonElement>) => {\n        event.preventDefault();\n    };\n\n    const {\n        values,\n        touched,\n        errors,\n        handleSubmit,\n        handleBlur,\n        handleChange,\n        t,\n        loading\n    } = props;\n\n    return (\n        <form className={classes.form} onSubmit={handleSubmit}>\n            <TextField\n                id=\"username\"\n                name=\"username\"\n                label={t(\"forms.login.username\")}\n                value={values.username}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                helperText={\n                    touched.username\n                        ? t(`validations.loginForm.${errors.username}`, \"\")\n                        : \"\"\n                }\n                error={touched.username && Boolean(errors.username)}\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                autoComplete=\"username\"\n            />\n            <TextField\n                id=\"password\"\n                name=\"password\"\n                type={passwordVisibility ? \"text\" : \"password\"}\n                value={values.password}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                helperText={\n                    touched.password\n                        ? t(`validations.loginForm.${errors.password}`, \"\")\n                        : \"\"\n                }\n                error={touched.password && Boolean(errors.password)}\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                InputProps={{\n                    endAdornment: (\n                        <InputAdornment position=\"end\">\n                            <IconButton\n                                aria-label=\"toggle password visibility\"\n                                onClick={handleClickShowPassword}\n                                onMouseDown={handleMouseDownPassword}\n                                edge=\"end\">\n                                {passwordVisibility ? <Visibility /> : <VisibilityOff />}\n                            </IconButton>\n                        </InputAdornment>\n                    )\n                }}\n                label={t(\"forms.login.password\")}\n                autoComplete=\"password\"\n            />\n            <FormControlLabel\n                control={<Checkbox value={values.remember} color=\"primary\" />}\n                label={t(\"forms.login.rememberMe\")}\n            />\n            <div className={classes.wrapper}>\n                <Button\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    disabled={loading}\n                    className={classes.submit}>\n                    {t(\"general.login\")}\n                </Button>\n                {loading && (\n                    <CircularProgress size={24} className={classes.buttonProgress} />\n                )}\n            </div>\n            <Grid container>\n                <Grid item xs>\n                    <Link component={RouterLink} to=\"/forgot-password\" variant=\"body2\">\n                        {t(\"general.forgotPassword\")}\n                    </Link>\n                </Grid>\n                <Grid item>\n                    <Link component={RouterLink} to=\"/signup\" variant=\"body2\">\n                        {t(\"forms.login.Dont_have_an_account_Sign_Up\")}\n                    </Link>\n                </Grid>\n            </Grid>\n        </form>\n    );\n};\n\nconst LoginForm = withFormik<IFormProps, IFormValues>({\n    mapPropsToValues({ username, password, remember }) {\n        return {\n            username: username || \"\",\n            password: password || \"\",\n            remember: remember || false\n        };\n    },\n    validationSchema: object().shape({\n        username: string().required(\"Username is Required\"),\n        password: string().required(\"Password is Required\")\n    }),\n    handleSubmit(values, { props }) {\n        props.handleUserAuthentication(values);\n    }\n})(RenderForm);\n\nconst TranslatedLoginForm = withTranslation()(LoginForm);\n\nexport default TranslatedLoginForm;\n","import React, { FC, useState } from \"react\";\nimport { useSnackbar } from \"components/layout/Snackbar\";\nimport { useTranslation } from \"react-i18next\";\nimport { useHistory } from \"react-router-dom\";\nimport { pick } from \"lodash\";\n\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Box from \"@material-ui/core/Box\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\n\nimport AppBar from \"components/layout/AppBar\";\nimport Copyright from \"components/layout/Footer/Copyright\";\nimport LoginForm from \"./components/loginForm\";\n\nimport { ILoginParams, login } from \"session/auth\";\n\nimport useStyles from \"assets/styles/Auth/authStyles\";\n\ninterface ISignInProps {}\n\nconst BackgroundPattern: FC = ({ children }) => {\n    const classes = useStyles();\n    return (\n        <div className={classes.waveContainer}>\n            <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 1440 320\"\n                className={classes.waveContent}>\n                <path\n                    fill=\"#3f51b5\"\n                    fillOpacity=\"1\"\n                    d=\"M0,128L80,160C160,192,320,256,480,261.3C640,267,800,213,960,202.7C1120,192,1280,224,1360,240L1440,256L1440,320L1360,320C1280,320,1120,320,960,320C800,320,640,320,480,320C320,320,160,320,80,320L0,320Z\"></path>\n            </svg>\n            {children}\n        </div>\n    );\n};\n\nconst SignIn: FC<ISignInProps> = () => {\n    const [loading, setLoading] = useState(false);\n\n    const classes = useStyles();\n    const { setAlert } = useSnackbar();\n    const history = useHistory();\n    const { t } = useTranslation();\n\n    const authenticateUser = async (loginData: ILoginParams) => {\n        const user: ILoginParams = pick(loginData, [\"username\", \"password\"]);\n        try {\n            setLoading(true);\n            const response = await login(user);\n            setLoading(false);\n            history.push({ pathname: \"/dashboard\", state: response });\n            setAlert({ open: true, type: \"success\", message: \"Successfully logged in\" });\n        } catch (error) {\n            setLoading(false);\n            setAlert({ open: true, type: \"error\", message: error.message });\n        }\n    };\n\n    return (\n        <BackgroundPattern>\n            <div className={classes.root}>\n                <AppBar type=\"Top\" isAuthenticated={false} />\n                <Container component=\"main\" maxWidth=\"xs\">\n                    <div className={classes.paper}>\n                        <Avatar className={classes.avatar}>\n                            <LockOutlinedIcon />\n                        </Avatar>\n                        <Typography component=\"h2\" variant=\"h6\">\n                            {t(\"welcome\")}\n                        </Typography>\n                        <LoginForm\n                            handleUserAuthentication={authenticateUser}\n                            loading={loading}\n                        />\n                    </div>\n                </Container>\n            </div>\n            <Box mt={8}>\n                <Copyright />\n            </Box>\n        </BackgroundPattern>\n    );\n};\n\nexport default SignIn;\n"],"sourceRoot":""}